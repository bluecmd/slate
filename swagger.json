{
  "swagger" : "2.0",
  "info" : {
    "description" : "Reference of Tink's API",
    "version" : "v1",
    "title" : "Tink API"
  },
  "host" : "www.tink.se",
  "basePath" : "/api/v1",
  "tags" : [ {
    "name" : "Account Service",
    "description" : "An account could either be a debit account, a credit card, a loan or mortgage."
  }, {
    "name" : "Activity Service",
    "description" : "Activities are generated after statistics has been generated. The activities resides in a sorted list. Sort order is based on relevance."
  }, {
    "name" : "Category Service",
    "description" : "List of categories with parent/child relationships using their id and parent fields."
  }, {
    "name" : "Device Service",
    "description" : "This service handles Devices and their APN and GCM notification tokens."
  }, {
    "name" : "Search Service",
    "description" : "Service for searching and fetching transactions and their corresponding statistics."
  }, {
    "name" : "Statistics Service"
  }, {
    "name" : "Transaction Service",
    "description" : "Transactions Service"
  }, {
    "name" : "User Service",
    "description" : "User Service handles operations regarding the User"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/accounts/list" : {
      "get" : {
        "tags" : [ "Account Service" ],
        "summary" : "List accounts",
        "description" : "Returns an object with a list of the authenticated user's accounts.",
        "operationId" : "listAccounts",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AccountListResponse"
            }
          }
        }
      }
    },
    "/accounts/{id}" : {
      "put" : {
        "tags" : [ "Account Service" ],
        "summary" : "Update an Account",
        "description" : "Updates certain user modifiable properties of an account. Please refer to the body schema to see which properties are modifiable by the user.",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the account",
          "required" : true,
          "type" : "8937fa00166946cbbcbbec569c9d6e90",
          "x-example" : "8937fa00166946cbbcbbec569c9d6e90"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The updated account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/activities" : {
      "get" : {
        "tags" : [ "Activity Service" ],
        "summary" : "List activities",
        "description" : "Returns all activities within the range of [offset, offset+limit].",
        "operationId" : "list",
        "consumes" : [ "application/x-protobuf", "application/json" ],
        "produces" : [ "application/x-protobuf", "application/json" ],
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset in the sorted list of activities",
          "required" : true,
          "type" : "0",
          "format" : "int32",
          "x-example" : "0"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of activities to fetch",
          "required" : true,
          "type" : "20",
          "format" : "int32",
          "x-example" : "20"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Activity"
              }
            }
          }
        }
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "Category Service" ],
        "summary" : "List categories",
        "description" : "Returns all categories",
        "operationId" : "list",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Category"
              }
            }
          }
        }
      }
    },
    "/devices" : {
      "get" : {
        "tags" : [ "Device Service" ],
        "summary" : "List all registered devices",
        "description" : "Lists all registered devices.",
        "operationId" : "getDevices",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeviceListResponse"
            }
          }
        }
      }
    },
    "/devices/{deviceToken}" : {
      "put" : {
        "tags" : [ "Device Service" ],
        "summary" : "Register a device",
        "description" : "Registers a device for the authenticated user. If the same notificationToken would exist on some another user, it will be removed from that user. If the deviceToken is registered already with a different push token, it will be updated to the latest one.",
        "operationId" : "registerDevice",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceToken",
          "in" : "path",
          "description" : "The (persistent) deviceToken",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The token and some meta data around it",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "tags" : [ "Device Service" ],
        "summary" : "Deregister a device",
        "description" : "Deregisters the device. Does not require an authenticated user.",
        "operationId" : "deregisterDevice",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceToken",
          "in" : "path",
          "description" : "The (persistent) deviceToken",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/search" : {
      "post" : {
        "tags" : [ "Search Service" ],
        "summary" : "Query transactions",
        "description" : "Returns a response containing transaction and their corresponding statistics matching the query.",
        "operationId" : "query",
        "consumes" : [ "application/json", "application/x-protobuf" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The search query.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SearchQuery"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SearchResponse"
            }
          }
        }
      }
    },
    "/statistics/query" : {
      "post" : {
        "tags" : [ "Statistics Service" ],
        "summary" : "Query for Statistics",
        "description" : "Returns statistics matching the query",
        "operationId" : "query",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The query object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StatisticQuery"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Statistic"
              }
            }
          }
        }
      }
    },
    "/transactions" : {
      "put" : {
        "tags" : [ "Transaction Service" ],
        "summary" : "Update a list of transactions",
        "description" : "Updates certain user modifiable properties of a list of transactions",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The transactions to be updated",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Transaction"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/transactions/categorize" : {
      "post" : {
        "tags" : [ "Transaction Service" ],
        "summary" : "Change category of transactions",
        "description" : "Changes category of the supplied list of transactions to the supplied category",
        "operationId" : "categorize",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of objects holding new category and the transactions to be categorized",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/CategorizeTransactionsRequest"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/transactions/suggest" : {
      "get" : {
        "tags" : [ "Transaction Service" ],
        "summary" : "Get categorization clusters",
        "description" : "Returns an object holding clusters of transactions to be categorized and possible categorization level improvement",
        "operationId" : "suggest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "numberOfClusters",
          "in" : "query",
          "description" : "Max number of clusters returned",
          "required" : false,
          "type" : "7",
          "format" : "int32",
          "x-example" : "7"
        }, {
          "name" : "evaluateEverything",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SuggestTransactionsResponse"
            }
          }
        }
      }
    },
    "/transactions/{id}" : {
      "get" : {
        "tags" : [ "Transaction Service" ],
        "summary" : "Get one transaction",
        "description" : "Returns a transaction matching the requested id",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the transaction",
          "required" : true,
          "type" : "8937fa00166946cbbcbbec569c9d6e90",
          "x-example" : "8937fa00166946cbbcbbec569c9d6e90"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Transaction"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Transaction Service" ],
        "summary" : "Update a transaction",
        "description" : "Updates certain user modifiable properties of a transaction",
        "operationId" : "update",
        "consumes" : [ "application/json", "application/x-protobuf" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the transaction",
          "required" : true,
          "type" : "8937fa00166946cbbcbbec569c9d6e90",
          "x-example" : "8937fa00166946cbbcbbec569c9d6e90"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "The transaction to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Transaction"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Transaction"
            }
          }
        }
      }
    },
    "/transactions/{id}/similar" : {
      "get" : {
        "tags" : [ "Transaction Service" ],
        "summary" : "Get similar transactions",
        "description" : "Returns an object holding a list of transactions similar to the supplied transaction based on description and a list of statistics summarizing these transactions",
        "operationId" : "similar",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The id of the transaction",
          "required" : true,
          "type" : "8937fa00166946cbbcbbec569c9d6e90",
          "x-example" : "8937fa00166946cbbcbbec569c9d6e90"
        }, {
          "name" : "categoryId",
          "in" : "query",
          "description" : "Returns similar of the this cateogry",
          "required" : false,
          "type" : "c3b543d4817c4c08a96da789282f0501",
          "x-example" : "c3b543d4817c4c08a96da789282f0501"
        }, {
          "name" : "includeSelf",
          "in" : "query",
          "description" : "Include the supplied transaction in response",
          "required" : false,
          "type" : "false",
          "x-example" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SimilarTransactionsResponse"
            }
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "User Service" ],
        "summary" : "Get the user",
        "description" : "Returns the user object. Note that the password field is not stored in clear text nor populated when getting the user. It's only used for setting the password when registering a new user.",
        "operationId" : "get",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "User Service" ],
        "summary" : "Update the user",
        "description" : "Updates certain user modifiable properties of a user. Please refer to the body schema to see which properties are modifiable by the user.",
        "operationId" : "update",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The updated user object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "X-Tink-Password-Confirmation",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "default" : ""
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/user/markets/list" : {
      "get" : {
        "tags" : [ "User Service" ],
        "summary" : "List markets",
        "description" : "Returns an object with a list of all available markets in which a user could register with.",
        "operationId" : "getMarketList",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "name" : "desired",
          "in" : "query",
          "description" : "The ISO 3166-1 alpha-2 country code of the desired market",
          "required" : false,
          "type" : "FI",
          "x-example" : "FI"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MarketListResponse"
            }
          }
        }
      }
    },
    "/user/profile" : {
      "get" : {
        "tags" : [ "User Service" ],
        "summary" : "Get the user profile",
        "description" : "Returns the user profile.",
        "operationId" : "getProfile",
        "produces" : [ "application/json", "application/x-protobuf" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfile"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "User Service" ],
        "summary" : "Update the user profile",
        "description" : "Updates certain user modifiable properties of a user's profile. Please refer to the body schema to see which properties are modifiable by the user.",
        "operationId" : "updateProfile",
        "consumes" : [ "application/json", "application/x-protobuf" ],
        "produces" : [ "application/json", "application/x-protobuf" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "The updated user profile object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserProfile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserProfile"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Account" : {
      "type" : "object",
      "required" : [ "accountNumber", "balance", "credentialsId", "excluded", "favored", "id", "name", "ownership", "type" ],
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "example" : "1234-123456789",
          "description" : "The account number of the account."
        },
        "balance" : {
          "type" : "number",
          "format" : "double",
          "example" : "34567.50",
          "description" : "The current balance of the account."
        },
        "credentialsId" : {
          "type" : "string",
          "example" : "6e68cc6287704273984567b3300c5822",
          "description" : "The internal identifier of the credentials that the account belongs to."
        },
        "excluded" : {
          "type" : "boolean",
          "example" : "false",
          "description" : "Indicates if the user has excluded the account. This can be modified by the user.",
          "default" : false
        },
        "favored" : {
          "type" : "boolean",
          "example" : "false",
          "description" : "Indicates if the user has favored the account. This can be modified by the user.",
          "default" : false
        },
        "id" : {
          "type" : "string",
          "example" : "a6bb87e57a8c4dd4874b241471a2b9e8",
          "description" : "The internal identifier of account."
        },
        "name" : {
          "type" : "string",
          "example" : "Privatkonto",
          "description" : "The display name of the account. This can be modified by the user."
        },
        "ownership" : {
          "type" : "number",
          "format" : "double",
          "example" : "0.5",
          "description" : "The ownership ratio indicating how much of the account is owned by the user. This is used to determine how much of transactions belonging to this account should be attributed to the user when statistics are calculated. This can be modified by the user."
        },
        "type" : {
          "type" : "string",
          "description" : "The type of the account. This can be modified by the user.",
          "enum" : [ "CHECKING", "SAVINGS", "INVESTMENT", "CREDIT_CARD", "LOAN" ]
        }
      }
    },
    "AccountDetails" : {
      "type" : "object",
      "properties" : {
        "interest" : {
          "type" : "number",
          "format" : "double"
        },
        "numMonthsBound" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "AccountListResponse" : {
      "type" : "object",
      "properties" : {
        "accounts" : {
          "type" : "array",
          "description" : "A list of accounts",
          "items" : {
            "$ref" : "#/definitions/Account"
          }
        }
      }
    },
    "Activity" : {
      "type" : "object",
      "required" : [ "content", "date", "importance", "key", "message", "title", "type" ],
      "properties" : {
        "content" : {
          "type" : "object",
          "description" : "Serialized type dependent object."
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1455740874875",
          "description" : "Date of the activity."
        },
        "importance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Importance compared to other activities 1-100 where 100 is of most importance."
        },
        "key" : {
          "type" : "string",
          "description" : "Persistent key per type and content."
        },
        "message" : {
          "type" : "string",
          "description" : "The activty message."
        },
        "title" : {
          "type" : "string",
          "description" : "The activty title."
        },
        "type" : {
          "type" : "string",
          "description" : "The activty type."
        }
      }
    },
    "Budget" : {
      "type" : "object",
      "properties" : {
        "budgetedAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "categoryId" : {
          "type" : "string"
        },
        "currentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "historicalAmounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Statistic"
          }
        },
        "id" : {
          "type" : "string"
        },
        "suggestedAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "userId" : {
          "type" : "string"
        }
      }
    },
    "CategorizeTransactionsRequest" : {
      "type" : "object",
      "required" : [ "categoryId", "transactionIds" ],
      "properties" : {
        "categoryId" : {
          "type" : "string",
          "example" : "2d3bd65493b549e1927d97a2d0683ab9",
          "description" : "The internal identifier of the category that the list of transactions is categorized to."
        },
        "transactionIds" : {
          "type" : "array",
          "example" : "[\"92e9e178cc22437281084c572ada8d7d\",\"a40db0b79bf94d2a9340cbc35d8b8020\"]",
          "description" : "A list of internal identifiers of the transactions categorized.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Category" : {
      "type" : "object",
      "required" : [ "code", "defaultChild", "id", "sortOrder", "type", "typeName" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "expenses:food.restaurants",
          "description" : "Machine readable category code."
        },
        "defaultChild" : {
          "type" : "boolean",
          "example" : "false",
          "description" : "Indicates if this is the default child to be used when categorizing to a primary level category.",
          "default" : false
        },
        "id" : {
          "type" : "string",
          "example" : "7e88d58188ee49749adca59e152324b6",
          "description" : "The internal identifier of the category, referenced by e.g. a transaction."
        },
        "parent" : {
          "type" : "string",
          "example" : "067fa4c769774ae980435c76be328c0b",
          "description" : "The parent internal identifier of this category, or null."
        },
        "primaryName" : {
          "type" : "string",
          "example" : "Food & Drinks",
          "description" : "The primary name of this category."
        },
        "searchTerms" : {
          "type" : "string",
          "example" : "food,lunch,snacks",
          "description" : "Used by search engine to find transaction with this category."
        },
        "secondaryName" : {
          "type" : "string",
          "example" : "Restaurants",
          "description" : "The secondary name of this category."
        },
        "sortOrder" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "45",
          "description" : "Sort order for nicer display for the user."
        },
        "type" : {
          "type" : "string",
          "example" : "EXPENSES",
          "description" : "Type of the category.",
          "enum" : [ "INCOME", "EXPENSES", "TRANSFERS" ]
        },
        "typeName" : {
          "type" : "string",
          "example" : "Expenses",
          "description" : "Type name of the category."
        }
      }
    },
    "Coordinate" : {
      "type" : "object",
      "properties" : {
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Currency" : {
      "type" : "object",
      "required" : [ "code", "factor", "prefixed", "symbol" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "SEK",
          "description" : "The ISO 4217 code of the currency."
        },
        "factor" : {
          "type" : "number",
          "format" : "double",
          "example" : "10",
          "description" : "An approximate currency conversion factor to inversely scale triggers to the EUR currency."
        },
        "prefixed" : {
          "type" : "boolean",
          "description" : "Indicates that the currency symbol should prefix the amount.",
          "default" : false
        },
        "symbol" : {
          "type" : "string",
          "example" : "kr",
          "description" : "The symbol of the currency."
        }
      }
    },
    "Device" : {
      "type" : "object",
      "properties" : {
        "appId" : {
          "type" : "string",
          "example" : "se.seb.privatkund",
          "description" : "The app id of the app that registers the device"
        },
        "deviceToken" : {
          "type" : "string",
          "description" : "A device token, should be unique per device and app"
        },
        "os" : {
          "type" : "string",
          "example" : "ANDROID",
          "description" : "The operating system of the device",
          "enum" : [ "ANDROID", "IOS" ]
        },
        "notificationToken" : {
          "type" : "string",
          "example" : "LRJ2bFzHA1jUIkwayDqxteNsWY3udejkEe9UwRMt12E_R5i...",
          "description" : "The APN or GCM token"
        },
        "userAgent" : {
          "type" : "string",
          "example" : "Tink Mobile/1.7.8 (Android; 4.4.2, LGE Nexus 4)",
          "description" : "The User-Agent of the device"
        }
      }
    },
    "DeviceListResponse" : {
      "type" : "object",
      "properties" : {
        "devices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Device"
          }
        }
      }
    },
    "ImageUrls" : {
      "type" : "object",
      "properties" : {
        "icon" : {
          "type" : "string"
        },
        "banner" : {
          "type" : "string"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "accuracy" : {
          "type" : "number",
          "format" : "double"
        },
        "address" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "country" : {
          "type" : "string"
        },
        "coordinate" : {
          "$ref" : "#/definitions/Coordinate"
        }
      }
    },
    "Market" : {
      "type" : "object",
      "required" : [ "code", "currencies", "defaultCurrency", "defaultLocale", "defaultTimeZone", "description", "status" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "example" : "SE",
          "description" : "The ISO 3166-1 alpha-2 country code of the market.",
          "enum" : [ "FR", "GB", "SE", "US", "CA", "NZ", "AU", "ES", "NL", "DK", "NO", "FI", "DE", "IT", "RO", "BE", "GR", "CZ", "PT", "HU", "AT", "BG", "SK", "IE", "HR", "SI", "LV", "EE", "CY", "LU", "MT", "PL", "BR", "IN", "SG" ]
        },
        "currencies" : {
          "type" : "array",
          "description" : "The applicable currencies available in the market.",
          "items" : {
            "$ref" : "#/definitions/Currency"
          }
        },
        "defaultCurrency" : {
          "type" : "string",
          "example" : "SEK",
          "description" : "The ISO 4217 code of the default currency."
        },
        "defaultLocale" : {
          "type" : "string",
          "example" : "sv_SE",
          "description" : "The default locale in the market."
        },
        "defaultTimeZone" : {
          "type" : "string",
          "example" : "Europe/Stockholm",
          "description" : "The default time zone in the market."
        },
        "description" : {
          "type" : "string",
          "example" : "Sweden",
          "description" : "The display name of the market"
        },
        "status" : {
          "type" : "boolean",
          "description" : "Flag to indicate if this is the suggested market for the user.",
          "default" : false
        }
      }
    },
    "MarketListResponse" : {
      "type" : "object",
      "properties" : {
        "markets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Market"
          }
        }
      }
    },
    "NotificationSettings" : {
      "type" : "object",
      "required" : [ "balance", "budget", "doubleCharge", "income", "largeExpense", "summaryMonthly", "summaryWeekly", "transaction", "unusualAccount", "unusualCategory" ],
      "properties" : {
        "balance" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications with low or high balances alerts.",
          "default" : false
        },
        "budget" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications regarding her budgets.",
          "default" : false
        },
        "doubleCharge" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications with double-charge alerts.",
          "default" : false
        },
        "income" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications when an income is received.",
          "default" : false
        },
        "largeExpense" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications when a large expense is detected.",
          "default" : false
        },
        "summaryMonthly" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications with monthly summaries.",
          "default" : false
        },
        "summaryWeekly" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications with weekly summaries.",
          "default" : false
        },
        "transaction" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications for every transaction.",
          "default" : false
        },
        "unusualAccount" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications when there is unusual activity on any of her accounts.",
          "default" : false
        },
        "unusualCategory" : {
          "type" : "boolean",
          "description" : "Indicates if the user wants to receive notifications when she has spend more than usual on something.",
          "default" : false
        }
      }
    },
    "SearchQuery" : {
      "type" : "object",
      "properties" : {
        "endDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1455740874875",
          "description" : "The end date of the result."
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "20",
          "description" : "The limit for the result, used for paging."
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "20",
          "description" : "The offset for the result, used for paging."
        },
        "order" : {
          "type" : "string",
          "example" : "ASC",
          "description" : "The order of the result.",
          "enum" : [ "ASC", "DESC" ]
        },
        "queryString" : {
          "type" : "string",
          "example" : "Food this week",
          "description" : "The string query."
        },
        "sort" : {
          "type" : "string",
          "example" : "DATE",
          "description" : "The sort order of the result.",
          "enum" : [ "SCORE", "DATE", "ACCOUNT", "DESCRIPTION", "AMOUNT", "CATEGORY" ]
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1455740874875",
          "description" : "The start date of the result."
        },
        "includeUpcoming" : {
          "type" : "boolean",
          "description" : "Indicates if result should include upcoming transactions.",
          "default" : false
        }
      }
    },
    "SearchResponse" : {
      "type" : "object",
      "required" : [ "count", "net", "periodAmounts", "query", "results" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "110",
          "description" : "Number of results returned."
        },
        "periodAmounts" : {
          "type" : "array",
          "description" : "Key value object holding periods and statistics values for result with the period specified in query.",
          "items" : {
            "$ref" : "#/definitions/StringDoublePair"
          }
        },
        "query" : {
          "description" : "The query executed.",
          "$ref" : "#/definitions/SearchQuery"
        },
        "results" : {
          "type" : "array",
          "description" : "The search result.",
          "items" : {
            "$ref" : "#/definitions/SearchResult"
          }
        },
        "net" : {
          "type" : "number",
          "format" : "double",
          "example" : "1288.45",
          "description" : "The transaction amount net of the result."
        }
      }
    },
    "SearchResult" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "transaction" : {
          "description" : "The transactions resulting from the query.",
          "$ref" : "#/definitions/Transaction"
        },
        "type" : {
          "type" : "string",
          "example" : "TRANSACTION",
          "description" : "The search type.",
          "enum" : [ "STATEMENT", "TRANSACTION", "CATEGORY", "BUDGET", "GOAL", "SUGGESTION" ]
        }
      }
    },
    "SimilarTransactionsResponse" : {
      "type" : "object",
      "required" : [ "statistics", "transactions" ],
      "properties" : {
        "statistics" : {
          "type" : "array",
          "description" : "Statistics of type 'income-and-expenses-and-transfers' for the similar transactions.",
          "items" : {
            "$ref" : "#/definitions/Statistic"
          }
        },
        "transactions" : {
          "type" : "array",
          "description" : "List of similar transactions.",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      }
    },
    "Statistic" : {
      "type" : "object",
      "required" : [ "description", "period", "resolution", "type", "userId", "value" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "fe9e199c2ca94c12baf1f3eb4a4122de",
          "description" : "Identifier of the data the statistic represents."
        },
        "payload" : {
          "type" : "string",
          "example" : "690667930d7e4f2ba0d9aa5f7d2a1941",
          "description" : "Secondary identifier of the data the statistic represent"
        },
        "period" : {
          "type" : "string",
          "example" : "2014-12-15",
          "description" : "The statistic's period, depends on it's resolution. On of: year, month, week or day. Format: '2014', '2014-02', 2014:45 or '2014-02-12'"
        },
        "resolution" : {
          "type" : "string",
          "example" : "DAILY",
          "description" : "Resolution for the statistics.",
          "enum" : [ "DAILY", "MONTHLY", "MONTHLY_ADJUSTED", "YEARLY", "ALL", "WEEKLY" ]
        },
        "type" : {
          "type" : "string",
          "example" : "expenses-by-account",
          "description" : "The statistic's type."
        },
        "userId" : {
          "type" : "string",
          "example" : "d9f134ee2eb44846a4e02990ecc8d32e",
          "description" : "The internal identifier of the user that the statistics belongs to."
        },
        "value" : {
          "type" : "number",
          "format" : "double",
          "example" : "1298.5",
          "description" : "The value of the statistics for this type, period, and description."
        }
      }
    },
    "StatisticQuery" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "fe9e199c2ca94c12baf1f3eb4a4122de",
          "description" : "Identifier of the data the statistic represents."
        },
        "periods" : {
          "type" : "array",
          "example" : "[\"2014-02-11\",\"2014-02-12\"]",
          "description" : "Time periods for the statistics: year, month, week or day. Format: '2014', '2014-02', 2014:45 or '2014-02-12'",
          "items" : {
            "type" : "string"
          }
        },
        "resolution" : {
          "type" : "string",
          "example" : "DAILY",
          "description" : "Resolution for the statistics.",
          "enum" : [ "DAILY", "MONTHLY", "MONTHLY_ADJUSTED", "YEARLY", "ALL", "WEEKLY" ]
        },
        "types" : {
          "type" : "array",
          "example" : "[\"expenses-by-account\"]",
          "description" : "A list of types of statistics. See Statistics for type information.",
          "items" : {
            "type" : "string"
          }
        },
        "padResultUntilToday" : {
          "type" : "boolean",
          "example" : "true",
          "description" : "Indicates if the result should be flat filled until the period of today.",
          "default" : false
        }
      }
    },
    "StringDoublePair" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "SuggestTransactionsResponse" : {
      "type" : "object",
      "required" : [ "categorizationImprovement", "categorizationLevel", "clusters" ],
      "properties" : {
        "categorizationImprovement" : {
          "type" : "number",
          "format" : "double",
          "example" : "0.01",
          "description" : "The categorization improvement achieve if all clusters are categorized."
        },
        "categorizationLevel" : {
          "type" : "number",
          "format" : "double",
          "example" : "0.93",
          "description" : "The current categorization level before categorization."
        },
        "clusters" : {
          "type" : "array",
          "description" : "Clusters to categorize.",
          "items" : {
            "$ref" : "#/definitions/TransactionCluster"
          }
        }
      }
    },
    "Transaction" : {
      "type" : "object",
      "required" : [ "accountId", "amount", "categoryId", "categoryType", "credentialsId", "date", "description", "id", "lastModified", "notes", "originalAmount", "originalDate", "originalDescription", "payload", "pending", "timestamp", "type", "userId" ],
      "properties" : {
        "accountId" : {
          "type" : "string",
          "example" : "3fe2d96efacd4dc5994404a950f238a9",
          "description" : "The internal identifier of the account that the transaction belongs to."
        },
        "amount" : {
          "type" : "number",
          "format" : "double",
          "example" : "34.50",
          "description" : "The amount of the transaction. This can be modified by the user."
        },
        "categoryId" : {
          "type" : "string",
          "example" : "0e1bade6a7e3459eb794f27b7ba4cea0",
          "description" : "The category of the transaction. This can be modified by the user."
        },
        "categoryType" : {
          "type" : "string",
          "example" : "EXPENSES",
          "description" : "The category type of the transaction.",
          "enum" : [ "INCOME", "EXPENSES", "TRANSFERS" ]
        },
        "credentialsId" : {
          "type" : "string",
          "example" : "65bc7a41a66e4ad1aad199bbfb3c5098",
          "description" : "The internal identifier of the credentials that the transaction belongs to."
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1455740874875",
          "description" : "The date the transaction was executed. This can be modified by the user."
        },
        "description" : {
          "type" : "string",
          "example" : "Stadium Sergelg Stockholm",
          "description" : "The description of the transaction. This can be modified by the user."
        },
        "id" : {
          "type" : "string",
          "example" : "79c6c9c27d6e42489e888e08d27205a1",
          "description" : "The internal identifier of the transaction."
        },
        "lastModified" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1455740874875",
          "description" : "The date the transaction was last modified by the user."
        },
        "merchantId" : {
          "type" : "string",
          "example" : "ba3f9312fa7d442abde61ca419877fbf",
          "description" : "The internal identifier of the merchant that the transaction belongs to. If available."
        },
        "notes" : {
          "type" : "string",
          "example" : "wedding",
          "description" : "A note specified by the user. This can be modified by the user."
        },
        "originalAmount" : {
          "type" : "number",
          "format" : "double",
          "example" : "34.50",
          "description" : "The original amount that was received from the provider, before the user changed it."
        },
        "originalDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1455740874875",
          "description" : "The original date that was received from the provider, before the user changed it."
        },
        "originalDescription" : {
          "type" : "string",
          "example" : "Stadium Sergelg Stockholm",
          "description" : "The original description that was received from the provider, before the user changed it."
        },
        "pending" : {
          "type" : "boolean",
          "example" : "false",
          "description" : "Indicates if this transaction has been settled or is still pending.",
          "default" : false
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "1464543093494",
          "description" : "The timestamp of when the transaction was first saved to database."
        },
        "type" : {
          "type" : "string",
          "example" : "CREDIT_CARD",
          "description" : "The type of the transaction.",
          "enum" : [ "DEFAULT", "CREDIT_CARD", "TRANSFER", "PAYMENT", "WITHDRAWAL" ]
        },
        "userId" : {
          "type" : "string",
          "example" : "d9f134ee2eb44846a4e02990ecc8d32e",
          "description" : "The internal identifier of the user that the transaction belongs to."
        },
        "upcoming" : {
          "type" : "boolean",
          "example" : "true",
          "description" : "Indicates if this is an upcoming transaction not booked yet.",
          "default" : false
        },
        "payload" : {
          "type" : "object",
          "example" : "{TRANSFER_ACCOUNT:'40dc04e5353547378c84f34ffc88f853'}",
          "description" : "Meta data about the transaction, in key value format with Strings.",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "TransactionCluster" : {
      "type" : "object",
      "properties" : {
        "categorizationImprovement" : {
          "type" : "number",
          "format" : "double",
          "example" : "0.003",
          "description" : "The categorization improvement achived if cluster is categorized."
        },
        "description" : {
          "type" : "string",
          "example" : "McDonalds Stock",
          "description" : "A description of the cluster to categorized."
        },
        "transactions" : {
          "type" : "array",
          "description" : "List of transactions belonging to this cluster.",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      }
    },
    "TransferDestination" : {
      "type" : "object",
      "properties" : {
        "balance" : {
          "type" : "number",
          "format" : "double"
        },
        "displayBankName" : {
          "type" : "string"
        },
        "displayAccountNumber" : {
          "type" : "string"
        },
        "uri" : {
          "type" : "string",
          "format" : "uri"
        },
        "images" : {
          "$ref" : "#/definitions/ImageUrls"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "matchesMultiple" : {
          "type" : "boolean",
          "default" : false
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "created", "id", "profile" ],
      "properties" : {
        "created" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the user was created."
        },
        "flags" : {
          "type" : "array",
          "description" : "The user-specific feature flags assigned to the user.",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string",
          "example" : "6e68cc6287704273984567b3300c5822",
          "description" : "The internal identifier of the user."
        },
        "password" : {
          "type" : "string",
          "description" : "The password of the user (only included at registration)."
        },
        "profile" : {
          "description" : "The configurable profile of the user",
          "$ref" : "#/definitions/UserProfile"
        },
        "username" : {
          "type" : "string",
          "example" : "nisse@manpower.se",
          "description" : "The username (usually email) of the user."
        }
      }
    },
    "UserConnectedService" : {
      "type" : "object",
      "properties" : {
        "externalId" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "TINK", "FACEBOOK", "GOOGLE" ]
        }
      }
    },
    "UserProfile" : {
      "type" : "object",
      "required" : [ "currency", "locale", "market", "notificationSettings", "periodAdjustedDay", "periodMode", "timeZone" ],
      "properties" : {
        "currency" : {
          "type" : "string",
          "example" : "SEK",
          "description" : "The configured ISO 4217 currency code of the user. This can be modified by the user."
        },
        "locale" : {
          "type" : "string",
          "example" : "sv_SE",
          "description" : "The configured locale of the user. This can be modified by the user."
        },
        "market" : {
          "type" : "string",
          "example" : "SE",
          "description" : "The primary market/country of the user."
        },
        "periodAdjustedDay" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "25",
          "description" : "The configured day of the month to break the adjusted period on. This can be modified by the user."
        },
        "periodMode" : {
          "type" : "string",
          "example" : "MONTHLY_ADJUSTED",
          "description" : "The configured monthly period mode of the user. This can be modified by the user.",
          "enum" : [ "MONTHLY", "MONTHLY_ADJUSTED" ]
        },
        "timeZone" : {
          "type" : "string",
          "example" : "Europe/Stockholm",
          "description" : "The configured time zone of the user. This can be modified by the user."
        },
        "notificationSettings" : {
          "description" : "The configured notification settings of the user. This can be modified by the user.",
          "$ref" : "#/definitions/NotificationSettings"
        }
      }
    }
  }
}